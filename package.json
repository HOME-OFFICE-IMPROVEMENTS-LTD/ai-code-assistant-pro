{
  "name": "ai-code-assistant-pro",
  "displayName": "ü§ñ AI Code Assistant Pro - 20+ Local LLMs",
  "description": "Privacy-first AI coding assistant with 10 unique personalities and 20+ local LLM models. No API costs, works offline, enterprise-grade security.",
  "version": "1.1.1",
  "publisher": "hoiltd-com",
  "icon": "images/icon.png",
  "galleryBanner": {
    "color": "#4CAF50",
    "theme": "dark"
  },
  "categories": [
    "AI",
    "Machine Learning",
    "Snippets",
    "Education",
    "Other"
  ],
  "keywords": [
    "AI assistant",
    "local LLM",
    "code generation",
    "privacy",
    "offline AI",
    "personalities",
    "buzzy",
    "builder",
    "scout",
    "guardian",
    "copilot alternative",
    "no API costs",
    "enterprise AI"
  ],
  "engines": {
    "vscode": "^1.85.0"
  },
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "aiCodePro.showChat",
        "title": "ü§ñ Open AI Chat",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.askBuzzy",
        "title": "‚ö° Ask Buzzy (Performance Expert)",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.askBuilder",
        "title": "üî® Ask Builder (Architecture Guru)",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.askScout",
        "title": "üîç Ask Scout (Code Analyst)",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.askGuardian",
        "title": "üõ°Ô∏è Ask Guardian (Security Expert)",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.askSpark",
        "title": "‚ú® Ask Spark (Innovation Master)",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.generateCode",
        "title": "üß† Generate Smart Code",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.explainCode",
        "title": "üìñ Explain Selected Code",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.optimizeCode",
        "title": "‚ö° Optimize Performance",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.reviewCode",
        "title": "üë• Code Review",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.writeTests",
        "title": "üß™ Generate Tests",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.writeDocumentation",
        "title": "üìù Generate Docs",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.configureModels",
        "title": "‚öôÔ∏è Configure Models",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.connectModels",
        "title": "üîó Connect to Local LLMs",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.showModelStats",
        "title": "üìä Model Performance",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.modelSettings",
        "title": "‚öôÔ∏è Settings",
        "category": "AI Code Pro"
      },
      {
        "command": "aiCodePro.advancedModelConfig",
        "title": "üöÄ Advanced Model Configuration",
        "category": "AI Code Pro"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "ai-code-pro-activity",
          "title": "AI Code Assistant Pro",
          "icon": "$(robot)"
        }
      ]
    },
    "views": {
      "ai-code-pro-activity": [
        {
          "id": "aiCodePro.personalities",
          "name": "ü§ñ AI Personalities",
          "when": "true"
        },
        {
          "id": "aiCodePro.models",
          "name": "üß† Local LLM Models",
          "when": "true"
        },
        {
          "id": "aiCodePro.history",
          "name": "üìù Chat History",
          "when": "true"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "aiCodePro.personalities",
        "contents": "ü§ñ **AI Personalities Ready**\n\n‚ö° **Buzzy** - Performance Expert\nüî® **Builder** - Architecture Guru\nüîç **Scout** - Code Analyst\nüõ°Ô∏è **Guardian** - Security Expert\n‚ú® **Spark** - Innovation Master\nüìù **Scribe** - Documentation Pro\nüìä **Metrics** - Analytics Master\n‚ö° **Flash** - Speed Optimizer\nüçØ **Honey** - Memory Expert\nüß™ **Tester** - QA Specialist\n\n[üöÄ Start AI Chat](command:aiCodePro.showChat)\n\n[‚öôÔ∏è Configure Models](command:aiCodePro.configureModels)"
      },
      {
        "view": "aiCodePro.models",
        "contents": "üß† **Local LLM Models**\n\nStatus: ‚úÖ Connected to Ollama\nModel: dolphin-mixtral:8x7b\n\n[üîó Connect to Local LLMs](command:aiCodePro.connectModels)\n[üìä Model Performance](command:aiCodePro.showModelStats)\n[‚öôÔ∏è Settings](command:aiCodePro.modelSettings)"
      }
    ],
    "menus": {
      "commandPalette": [
        {
          "command": "aiCodePro.showChat",
          "when": "true"
        },
        {
          "command": "aiCodePro.generateCode",
          "when": "true"
        }
      ],
      "editor/context": [
        {
          "command": "aiCodePro.explainCode",
          "group": "ai-code-pro@1",
          "when": "editorHasSelection"
        },
        {
          "command": "aiCodePro.optimizeCode",
          "group": "ai-code-pro@2",
          "when": "editorHasSelection"
        },
        {
          "command": "aiCodePro.reviewCode",
          "group": "ai-code-pro@3",
          "when": "editorHasSelection"
        }
      ]
    },
    "configuration": {
      "title": "AI Code Assistant Pro",
      "properties": {
        "aiCodePro.localLLMEndpoint": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "Local LLM API endpoint (Ollama, LocalAI, etc.)"
        },
        "aiCodePro.defaultPersonality": {
          "type": "string",
          "enum": [
            "buzzy",
            "builder",
            "scout",
            "guardian",
            "spark",
            "scribe",
            "metrics",
            "flash",
            "honey",
            "tester"
          ],
          "default": "buzzy",
          "description": "Default AI personality for quick queries"
        },
        "aiCodePro.preferredModels": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": [
            "codellama",
            "deepseek-coder",
            "mistral",
            "dolphin-mixtral"
          ],
          "description": "Your preferred local LLM models. Extension will automatically detect available models and use the best match for each task."
        },
        "aiCodePro.autoExplainOnSelect": {
          "type": "boolean",
          "default": false,
          "description": "Automatically explain code when text is selected"
        },
        "aiCodePro.enableOfflineMode": {
          "type": "boolean",
          "default": true,
          "description": "Work completely offline with local models"
        },
        "aiCodePro.maxResponseLength": {
          "type": "number",
          "default": 2048,
          "description": "Maximum response length from AI models"
        },
        "aiCodePro.enableCodeSuggestions": {
          "type": "boolean",
          "default": true,
          "description": "Enable real-time code suggestions"
        },
        "aiCodePro.privacyMode": {
          "type": "string",
          "enum": [
            "strict",
            "moderate",
            "relaxed"
          ],
          "default": "strict",
          "description": "Privacy level for code analysis"
        },
        "aiCodePro.optimalModelConfiguration": {
          "type": "object",
          "default": null,
          "description": "Auto-optimized model configuration generated by Advanced Model Configuration panel"
        },
        "aiCodePro.performanceMetrics": {
          "type": "object",
          "default": null,
          "description": "Performance monitoring data for model optimization (automatically managed)"
        }
      }
    },
    "keybindings": [
      {
        "command": "aiCodePro.showChat",
        "key": "ctrl+shift+a",
        "mac": "cmd+shift+a"
      },
      {
        "command": "aiCodePro.generateCode",
        "key": "ctrl+shift+g",
        "mac": "cmd+shift+g"
      },
      {
        "command": "aiCodePro.explainCode",
        "key": "ctrl+shift+e",
        "mac": "cmd+shift+e",
        "when": "editorHasSelection"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "package": "vsce package",
    "publish": "vsce publish"
  },
  "devDependencies": {
    "@types/node": "^20.19.14",
    "@types/vscode": "^1.104.0",
    "@typescript-eslint/eslint-plugin": "^8.44.0",
    "@typescript-eslint/parser": "^8.44.0",
    "@vscode/test-electron": "^2.3.0",
    "@vscode/vsce": "^3.6.0",
    "eslint": "^9.36.0",
    "typescript": "^5.0.0"
  },
  "dependencies": {
    "axios": "^1.12.2",
    "node-fetch": "^3.3.0",
    "openai": "^5.22.0",
    "ws": "^8.14.0"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/HOME-OFFICE-IMPROVEMENTS-LTD/ai-code-assistant-pro"
  },
  "homepage": "https://hoiltd.com",
  "bugs": {
    "url": "https://github.com/HOME-OFFICE-IMPROVEMENTS-LTD/ai-code-assistant-pro/issues"
  },
  "license": "MIT"
}
